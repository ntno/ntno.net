# Sets Metadata for workflow(s)
name: Metadata

on: 
  push:
  pull_request:
    types: [opened, reopened, closed]
  workflow_dispatch:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      artifact-name:
        description: "name of artifact containing the full event payload as JSON"
        value: ${{ jobs.set-metadata.outputs.artifact-name }}
      event-name:
        description: "name of triggering event"
        value: ${{ jobs.set-metadata.outputs.event-name }}
      build-tag:
        description: "build tag (either pr-# or sha-###)"
        value: ${{ jobs.set-metadata.outputs.build-tag }}
      revision-sha:
        description: "full sha"
        value: ${{ jobs.set-metadata.outputs.revision-sha }}
jobs:
  set-metadata:
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      artifact-name: ${{ steps.stash-event-payload.outputs.artifact-name }}
      event-name: ${{ steps.set-event-name.outputs.event-name }}
      build-tag: ${{ steps.set-build-tag.outputs.build-tag }}
      revision-sha: ${{ steps.set-revision-sha.outputs.revision-sha }}
    steps:
      - name: Generate Metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ntno/ntno.net
          tags: |
            type=ref,event=pr
            type=sha
      - name: set-event-name
        id: set-event-name
        run: echo "event-name=${{ github.event_name }}" >> $GITHUB_OUTPUT
      - name: set-build-tag
        id: set-build-tag
        run: echo "build-tag=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_OUTPUT
      - name: set-revision-sha
        id: set-revision-sha
        run: echo "revision-sha=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}" >> $GITHUB_OUTPUT
      - name: stash-event-payload
        id: stash-event-payload
        run: |
          mkdir -p ./details
          cat ${{ github.event_path }} > ./details/event-payload.json
          echo "artifact-name=details/event-payload.json" >> $GITHUB_OUTPUT
          cat ${{ github.event_path }}
      - uses: actions/upload-artifact@v3
        with:
          name: event-payload.json
          path: ./details/

  # job1:
  #     runs-on: ubuntu-latest
  #     # Map a step output to a job output
  #     outputs:
  #       output1: ${{ steps.step1.outputs.test }}
  #       output2: ${{ steps.step2.outputs.test }}
  #     steps:
  #       - id: step1
  #         run: echo "test=hello" >> $GITHUB_OUTPUT
  #       - id: step2
  #         run: echo "test=world" >> $GITHUB_OUTPUT
  #   job2:
  #     runs-on: ubuntu-latest
  #     needs: job1
  #     steps:
  #       - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}

