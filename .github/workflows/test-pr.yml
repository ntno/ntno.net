# Simple workflow for testing mkdocs site 
name: Test Pull Request

on:
  pull_request:
    types: [ synchronize ]
  
jobs:
  call-metadata-workflow:
    uses: ./.github/workflows/meta.yml 
    secrets: inherit
  build-pr:
    needs: [call-metadata-workflow]
    runs-on: ubuntu-latest
    steps:
      - name: Install Buildenv
        uses: ntno/setup-buildenv@v1
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip' # caching pip dependencies
      - name: Download Image Bundle
        run: |
          make get-image-bundle download-directory="$RUNNER_TEMP/"
      - name: Build Site
        run: |
          source ./scripts/build.sh prod us-east-2
      - name: Archive Site
        run: |
          export BUILD_TAG="${{ needs.call-metadata-workflow.outputs.build-tag }}"
          make bundle input-directory="./site" output-directory="./" bundle-filename="docs-site.tar" manifest-filename="manifest.txt"
          make upload-docs-artifact file="./docs-site.tar" version="${BUILD_TAG}"
          make upload-docs-artifact file="./manifest.txt" version="${BUILD_TAG}"
  deploy:
    runs-on: ubuntu-latest
    needs: [call-metadata-workflow, build-pr]
    steps:
      - name: Install Buildenv
        uses: ntno/setup-buildenv@v1
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Download Archived Site
        run: |
          export BUILD_TAG="${{ needs.call-metadata-workflow.outputs.build-tag }}"
          make download-docs-artifact version="${BUILD_TAG}" file="docs-site.tar" output-path="."
      - name: Deploy Archived Site 
        run: |
          mkdir -p site
          tar \
            --directory "./site/" \
            -xf ./docs-site.tar 
          
          ls -ltra ./site

          export TEMP_BUCKET_NAME="${{ needs.call-metadata-workflow.outputs.pr-env }}"
          aws s3 sync --dryrun --size-only --sse AES256 --acl public-read ./site/ s3://${TEMP_BUCKET_NAME}/

